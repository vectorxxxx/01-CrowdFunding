<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vectorx.crowdfunding.mapper.OrderProjectPOMapper">
    <!--
    OrderProjectVO selectOrderProjectVO(
            @Param("projectId")
                    Integer projectId,
            @Param("returnId")
                    Integer returnId);
    -->
    <select id="selectOrderProjectVO" resultType="com.vectorx.crowdfunding.entity.vo.OrderProjectVO">
        select t_project.id,
               project_name          projectName,
               description_simple    launchName,
               content               returnContent,
               t_return.count        returnCount,
               t_return.supportmoney supportUnitPrice,
               freight               deliveryCharge,
               signalpurchase        signalPurchase,
               purchase
        from t_project
                 left join t_member_launch_info on t_project.memberid = t_member_launch_info.memberid
                 left join t_return on t_project.id = t_return.projectid
        where t_project.id = #{projectId}
          and t_member_launch_info.id = #{returnId}
    </select>

    <resultMap id="BaseResultMap" type="com.vectorx.crowdfunding.entity.po.OrderProjectPO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="project_name" jdbcType="VARCHAR" property="projectName"/>
        <result column="launch_name" jdbcType="VARCHAR" property="launchName"/>
        <result column="return_content" jdbcType="VARCHAR" property="returnContent"/>
        <result column="return_count" jdbcType="INTEGER" property="returnCount"/>
        <result column="support_unit_price" jdbcType="INTEGER" property="supportUnitPrice"/>
        <result column="delivery_charge" jdbcType="INTEGER" property="deliveryCharge"/>
        <result column="order_id" jdbcType="INTEGER" property="orderId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        , project_name, launch_name, return_content, return_count, support_unit_price,
    delivery_charge, order_id
    </sql>
    <select id="selectByExample" parameterType="com.vectorx.crowdfunding.entity.po.OrderProjectPOExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_order_project
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_order_project
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from t_order_project
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.vectorx.crowdfunding.entity.po.OrderProjectPOExample">
        delete from t_order_project
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.vectorx.crowdfunding.entity.po.OrderProjectPO">
        insert into t_order_project (id, project_name, launch_name,
                                     return_content, return_count, support_unit_price,
                                     delivery_charge, order_id)
        values (#{id,jdbcType=INTEGER}, #{projectName,jdbcType=VARCHAR}, #{launchName,jdbcType=VARCHAR},
                #{returnContent,jdbcType=VARCHAR}, #{returnCount,jdbcType=INTEGER}, #{supportUnitPrice,jdbcType=INTEGER},
                #{deliveryCharge,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.vectorx.crowdfunding.entity.po.OrderProjectPO">
        insert into t_order_project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="projectName != null">
                project_name,
            </if>
            <if test="launchName != null">
                launch_name,
            </if>
            <if test="returnContent != null">
                return_content,
            </if>
            <if test="returnCount != null">
                return_count,
            </if>
            <if test="supportUnitPrice != null">
                support_unit_price,
            </if>
            <if test="deliveryCharge != null">
                delivery_charge,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="projectName != null">
                #{projectName,jdbcType=VARCHAR},
            </if>
            <if test="launchName != null">
                #{launchName,jdbcType=VARCHAR},
            </if>
            <if test="returnContent != null">
                #{returnContent,jdbcType=VARCHAR},
            </if>
            <if test="returnCount != null">
                #{returnCount,jdbcType=INTEGER},
            </if>
            <if test="supportUnitPrice != null">
                #{supportUnitPrice,jdbcType=INTEGER},
            </if>
            <if test="deliveryCharge != null">
                #{deliveryCharge,jdbcType=INTEGER},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.vectorx.crowdfunding.entity.po.OrderProjectPOExample" resultType="java.lang.Long">
        select count(*) from t_order_project
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_order_project
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.projectName != null">
                project_name = #{record.projectName,jdbcType=VARCHAR},
            </if>
            <if test="record.launchName != null">
                launch_name = #{record.launchName,jdbcType=VARCHAR},
            </if>
            <if test="record.returnContent != null">
                return_content = #{record.returnContent,jdbcType=VARCHAR},
            </if>
            <if test="record.returnCount != null">
                return_count = #{record.returnCount,jdbcType=INTEGER},
            </if>
            <if test="record.supportUnitPrice != null">
                support_unit_price = #{record.supportUnitPrice,jdbcType=INTEGER},
            </if>
            <if test="record.deliveryCharge != null">
                delivery_charge = #{record.deliveryCharge,jdbcType=INTEGER},
            </if>
            <if test="record.orderId != null">
                order_id = #{record.orderId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_order_project
        set id = #{record.id,jdbcType=INTEGER},
        project_name = #{record.projectName,jdbcType=VARCHAR},
        launch_name = #{record.launchName,jdbcType=VARCHAR},
        return_content = #{record.returnContent,jdbcType=VARCHAR},
        return_count = #{record.returnCount,jdbcType=INTEGER},
        support_unit_price = #{record.supportUnitPrice,jdbcType=INTEGER},
        delivery_charge = #{record.deliveryCharge,jdbcType=INTEGER},
        order_id = #{record.orderId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.vectorx.crowdfunding.entity.po.OrderProjectPO">
        update t_order_project
        <set>
            <if test="projectName != null">
                project_name = #{projectName,jdbcType=VARCHAR},
            </if>
            <if test="launchName != null">
                launch_name = #{launchName,jdbcType=VARCHAR},
            </if>
            <if test="returnContent != null">
                return_content = #{returnContent,jdbcType=VARCHAR},
            </if>
            <if test="returnCount != null">
                return_count = #{returnCount,jdbcType=INTEGER},
            </if>
            <if test="supportUnitPrice != null">
                support_unit_price = #{supportUnitPrice,jdbcType=INTEGER},
            </if>
            <if test="deliveryCharge != null">
                delivery_charge = #{deliveryCharge,jdbcType=INTEGER},
            </if>
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.vectorx.crowdfunding.entity.po.OrderProjectPO">
        update t_order_project
        set project_name       = #{projectName,jdbcType=VARCHAR},
            launch_name        = #{launchName,jdbcType=VARCHAR},
            return_content     = #{returnContent,jdbcType=VARCHAR},
            return_count       = #{returnCount,jdbcType=INTEGER},
            support_unit_price = #{supportUnitPrice,jdbcType=INTEGER},
            delivery_charge    = #{deliveryCharge,jdbcType=INTEGER},
            order_id           = #{orderId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
